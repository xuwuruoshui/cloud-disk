service core-api {
	
	// 用户登录
	@handler UserLogin
	post /user/login (LoginRequest) returns (LoginReply)
	
	// 用户详情
	@handler UserDetail
	get /user (UserDetailRequest) returns (UserDetailReply)
	
	// 验证码发送
	@handler MailCodeSendRegister
	post /mail/code/register (MailCodeSendRequest) returns (MailCodeSendReply)
	
	// 用户注册
	@handler UserRegister
	post /user/register (UserRegisterRequest) returns (UserRegisterReply)
	
	// 获取资源详情
	@handler ShareBasicDetail
	get /share/basic(ShareBasicDetailRequest) returns (ShareBasicDetailReply)
}

@server(
	middleware: Auth
)
service core-api {
	// 文件上传
	@handler FileUpload
	post /file/upload (FileUploadRequest) returns (FileUploadReply)
	
	// 用户文件关联存储
	@handler UserRepostitorySave
	post /user/repository (UserRepositorySaveRequest) returns (UserRepositorySaveReply)
	
	// 用户文件列表
	@handler UserFileList
	get /user/file/list(UserFileListRequest) returns (UserFileListReply)
	
	// 用户文件名称修改
	@handler UserFileNameUpdate
	patch /user/file/name(UserFileNameUpdateRequest) returns(UserFileNameUpdateReply)
	
	// 用户文件夹创建
	@handler UserFolderCreate
	post /user/folder(UserFolderCreateRequest) returns (UserFolderCreateReply)
	
	// 用户文件夹删除
	@handler UserFileDelete
	delete /user/file(UserFileDeleteRequest) returns (UserFileDeleteReply)
	
	// 用户文件移动
	@handler UserFileMove
	put /user/file/move(UserFileMoveRequest) returns (UserFileMoveReply)
	
	// 创建分享记录
	@handler ShareBasicCreate
	post /share/basic(ShareBasicCreateRequest) returns (ShareBasicCreateReply)
	
	// 资源保存
	@handler ShareBasicSave
	post /share/basic/save(ShareBasicSaveRequest) returns(ShareBasicSaveReply)
	
	// 刷新Authorization
	@handler RefreshAuthorization
	get /refresh/authorization(RefreshAuthorizationRequest) returns (RefreshAuthorizationReply)
	
	// 文件上传基本信息处理
	@handler FileUploadPrepare
	post /file/upload/prepare(FileUploadPrepareRequest) returns(FileUploadPrepareReply)
	
	// 文件分片上传
	@handler FileUploadChunk
	post /file/upload/chunk(FileUploadChunkRequest) returns(FileUploadChunkReply)
	
	//  文件分片上传完成
	@handler FileUploadChunkComplete
	post /file/upload/chunk/complete(FileUploadChunkCompleteRequest) returns(FileUploadChunkCompleteReply)
}

type FileUploadChunkCompleteRequest {
	Key        string      `json:"key"`
	UploadId   string      `json:"uploadId"`
	CosObjects []CosObject `json:"cosObjects"`
}

type CosObject {
	PartNum int    `json:"partNum"`
	Etag    string `json:"etag"`
}

type FileUploadChunkCompleteReply {
}

type FileUploadChunkRequest {
	// key
	// upload_id
	// part_num
}

type FileUploadChunkReply {
	Etag string `json:"etag"`
}

type FileUploadPrepareRequest {
	Md5  string `json:"md5"`
	Name string `json:"name"`
	Ext  string `json:"ext"`
}

type FileUploadPrepareReply {
	Identity string `json:"identity"`
	UploadId string `json:"uploadId"`
	// 文件名
	Key string `json:"key"`
}

type RefreshAuthorizationRequest {
}

type RefreshAuthorizationReply {
	Token        string `json:"token"`
	RefreshToken string `json:"refreshToken"`
}

type ShareBasicSaveRequest {
	RepositoryIdentity string `json:"repositoryIdentity"`
	ParentId           int64  `json:"parentId"`
}

type ShareBasicSaveReply {
	Identity string `json:"identity"`
}

type ShareBasicDetailRequest {
	Identity string `json:"identity"`
}

type ShareBasicDetailReply {
	Name               string `json:"name"`
	Ext                string `json:"ext"`
	Size               int64  `json:"size"`
	Path               string `json:"path"`
	RepositoryIdentity string `json:"repositoryIdentity"`
}

type ShareBasicCreateRequest {
	UserRepositoryIdentity string `json:"userRepositoryIdentity"`
	ExpireTime             int    `json:"expireTime"`
}

type ShareBasicCreateReply {
	Identity string `json:"identity"`
}

type UserFileMoveRequest {
	Identity       string `json:"identity"`
	ParentIdentity string `json:"parentIdentity"`
}

type UserFileMoveReply {
}

type UserFileDeleteRequest {
	Identity string `json:"identity"`
}

type UserFileDeleteReply {
}

type UserFolderCreateRequest {
	ParentId int64  `json:"parentId"`
	Name     string `json:"name"`
}

type UserFolderCreateReply {
	Identity string `json:"identity"`
}

type UserFileNameUpdateRequest {
	Identity string `json:"identity"`
	ParentId int    `json:"parentId"`
	Name     string `json:"name"`
}
type UserFileNameUpdateReply {
}

type UserFileListRequest {
	Id   int64 `json:"id,optional"`
	Page int   `json:"page,optional"`
	Size int   `json:"size,optional"`
}

type UserRepositorySaveRequest {
	ParentId           int64  `json:"parentId"`
	RepositoryIdentity string `json:"repositoryIdentity"`
	Ext                string `json:"ext"`
	Name               string `json:"name"`
}

type UserFileListReply {
	List  []*UserFile `json:"list"`
	Count int64       `json:"count,optional"`
}

type UserFile {
	Id                 int64  `json:"id"`
	Identity           string `json:"identity"`
	RepositoryIdentity string `json:"repositoryIdentity"`
	Name               string `json:"name"`
	Ext                string `json:"ext"`
	Path               string `json:"path"`
	Size               int64  `json:"size"`
	Mime               string `json:"mime"`
}

type UserRepositorySaveReply {
	Identity string `json:"identity"`
}

type FileUploadRequest {
	Hash string `json:"hash,optional"`
	Name string `json:"name,optional"`
	Ext  string `json:"ext,optional"`
	Size int64  `json:"size,optional"`
	Path string `json:"path,optional"`
}

type FileUploadReply {
	Identity string `json:"identity"`
	Ext      string `json:"ext"`
	Name     string `json:"name"`
}

type UserRegisterRequest {
	Name     string `json:"name"`
	Password string `json:"password"`
	Email    string `json:"email"`
	Code     string `json:"code"`
}

type UserRegisterReply {
}

type LoginRequest {
	Name     string `json:"name"`
	Password string `json:"password"`
}

type LoginReply {
	Token        string `json:"token"`
	RefreshToken string `json:"refreshToken"`
}

type UserDetailRequest {
	Identity string `json:"identity"`
}

type UserDetailReply {
	Name  string `json:"name"`
	Email string `json:"email"`
}

type MailCodeSendRequest {
	Email string `json:"email"`
}

type MailCodeSendReply {
	Code string `json:"code"`
}